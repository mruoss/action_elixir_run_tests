name: "Setup OTP & Elixir, Get Deps, Compile, Run Tests"
description: "For all current Elixir/OTP combinations: Setup OTP & Elixir, Get Deps, Compile, Run Tests"
on:
  workflow_call:
    inputs:
      checkout:
        description: "Whether to check out the code. Set to `false` to disable this, e.g. if you have already done this."
        required: true
        type: boolean
      warnings-as-errors:
        description: "Whether warning during compilation should be shown as errors and mark the workflow as failed."
        required: true
        type: boolean

strategy:
  matrix:
    # See https://hexdocs.pm/elixir/compatibility-and-deprecations.html#compatibility-between-elixir-and-erlang-otp
    otp: ["24.x", "25.x", "26.x", "27.x"]
    elixir: ["1.15.x", "1.16.x", "1.17.x", "1.18.x"]
    exclude:
      # OTP 24
      - elixir: "1.17.x"
        otp: "24.x"
      - elixir: "1.18.x"
        otp: "24.x"
      # OTP 27
      - elixir: "1.15.x"
        otp: "27.x"
      - elixir: "1.16.x"
        otp: "27.x"
jobs:
  elixir-test:
    runs-on: ubuntu-latest
    name: Test - OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        if: inputs.checkout != 'false'
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
          install-rebar: true
          install-hex: true

      - name: Retrieve Build Cache
        uses: actions/cache@v4
        id: build-folder-cache
        with:
          path: _build
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v4
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install Mix Dependencies
        run: mix deps.get

      - name: Compile Application / Library
        run: mix compile --warnings-as-errors
        if: inputs.warnings-as-errors == 'true'

      - name: Compile Application / Library
        run: mix compile
        if: inputs.warnings-as-errors != 'true'

      - name: Run Tests
        run: mix test
